// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "34.0.0"
        minSdkVersion = 21
        compileSdkVersion = 34
        targetSdkVersion = 34
        ndkVersion = "25.1.8937393"
        kotlinVersion = "1.8.0"
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath('com.android.tools.build:gradle')
        classpath('com.facebook.react:react-native-gradle-plugin')
        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin')
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
    }
}

// Add global dependency resolution
subprojects { subproject ->
    afterEvaluate {
        if (subproject.plugins.hasPlugin('com.android.application') || subproject.plugins.hasPlugin('com.android.library')) {
            android {
                compileSdkVersion rootProject.ext.compileSdkVersion
            }
        }
    }
}

apply plugin: "expo-root-project"
apply plugin: "com.facebook.react.rootproject"

// Global configuration for all projects
allprojects {
    configurations.all {
        resolutionStrategy {
            // Force specific AndroidX versions to avoid conflicts
            force 'androidx.core:core:1.12.0'
            force 'androidx.core:core-ktx:1.12.0'
            force 'androidx.appcompat:appcompat:1.6.1'
            force 'androidx.fragment:fragment:1.6.2'
            force 'androidx.annotation:annotation:1.7.0'
            
            // Remove any old support libraries that conflict with AndroidX
            eachDependency { details ->
                if (details.requested.group == 'com.android.support') {
                    if (details.requested.name.contains('support-') || 
                        details.requested.name.contains('appcompat') ||
                        details.requested.name.contains('annotation') ||
                        details.requested.name.contains('core') ||
                        details.requested.name.contains('compat')) {
                        details.useVersion '28.0.0'
                    }
                }
            }
        }
    }
}